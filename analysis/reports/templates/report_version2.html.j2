<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Analysis</title>
        <link href="./analysis/reports/templates/4.3.1.bootstrap.min.css" rel="stylesheet" type="text/css">
</head>
<body>
<div class="container"><div class="row"><div class="col">
<h1>Automated Analysis</h1>
    <h3>Report Created: {{evaluation.creation_time}}</h3>
    <p><b>Metric Name:</b> {{evaluation.profile.dataset.metric_name}}</p>
    <p><b>Baseline Period:</b> {{baseline_period.start_date.date()}} to {{baseline_period.end_date.date()}} (exclusive)</p>
    <p><b>Current Period:</b> {{current_period.start_date.date()}} to {{current_period.end_date.date()}} (exclusive)</p>

    <h2>Overall</h2>
    <p><b>Percent change:</b> {{evaluation.top_level_percent_change}}% </p>

    {% for key,row in evaluation.top_level_values.iterrows() %}
      <p><b>{{ row['timeframe'] }}:</b> {{ "{:,}".format(row['metric_value']) }}</p>
    {% endfor %}

    <h2>Overall Results</h2>
    <img src="{{ bar_plot_path }}">
    <br>
    <table class="table table-striped table-bordered mt-4">
        <thead>
        <tr>
            <th>Dimension(s)</th>
            <th>Dimension Value</th>
            <th>Change Distance</th>
            <th>Contribution to Overall Change</th>
            <th>Change in Contribution</th>
            <th>Percent Change</th>
        </tr>
        </thead>
        <tbody>
        {% for key,row in evaluation.overall_change_calc.iterrows() %}
        <tr>
            <td>{{ row['dimension'] }}</td>
            <td>{{ row['dimension_value'] }}</td>
            <td>{{ row["change_distance"] }}</td>
            <td>{{ row['contrib_to_overall_change'] }}%</td>
            <td>{{ row['change_in_proportion'] }}%</td>
            <td>{{ row['percent_change'] }}%</td>
        </tr>
        {% endfor %}
        </tbody>
    </table>

    <br>

    <h2>Dimensions</h2>
    <p>
    Note:
    <ul>
    <li>Dimension values with Contribution to Overall Change < {{evaluation.profile.threshold_percent}}% are excluded from report.</li>
    <li>Tables are sorted by: {{evaluation.profile.percent_change.sort_by}}. </li>
    <li>sum(Contribution to Overall Change) by dimension should equal 100%</li>
    <li>sum(Change in Proportion) by dimension should equal 0%</li>
    </ul>
    </p>
    {% for dimension,df in evaluation.dimension_calc.items() %}
        <img src="{{ scatter_plot_paths[dimension] }}">
        <table class="table table-striped table-bordered mt-4">
            <thead>
            <tr>
                <th>Dimension: {{ dimension }}</th>
                <th>Change Distance</th>
                <th>Contribution to Overall Change</th>
                <th>Change in Proportion</th>

                <th>Percent Change</th>
            </tr>
            </thead>
            <tbody>
            {% for key,row in df.iterrows() %}
            <tr>
                <td>{{ row['dimension_value_0'] }}</td>
                <td>{{ row["change_distance"] }}</td>
                <td>{{ row['contrib_to_overall_change'] }}%</td>
                <td>{{ row['change_in_proportion'] }}%</td>
                <td>{{ row['percent_change'] }}%</td>
            </tr>
            {% endfor %}
            </tbody>
        </table>
    {% endfor %}

    {% if evaluation.multi_dimension_calc|length > 0 %}
        <h2>Dimension Combinations</h2>
        <p>
        Note:
        <ul>
        <li>Dimension values with Contribution to Overall Change < {{evaluation.profile.threshold_percent}}% are excluded from report.</li>
        <li>Tables are sorted by: {{evaluation.profile.percent_change.sort_by}}. </li>
        <li>sum(Contribution to Overall Change) by dimension should equal 100%</li>
        <li>sum(Change in Proportion) by dimension should equal 0%</li>
        </ul>
        </p>

        {% for dimensions,df in evaluation.multi_dimension_calc.items() %}
        <br>
        <img src="{{ scatter_plot_paths["_".join(dimensions)] }}" style="height: 25; width: 75; float:inline-start">
            {% set num_of_dims = dimensions|length %}
            <table class="table table-striped table-bordered mt-4">
                <thead>
                <tr>
                    {% set first_row = df.iloc[0] %}
                    {% for dim_num in range(num_of_dims) %}
                        <th>Dimension: {{ first_row['dimension_' ~ dim_num] }}</th>
                    {% endfor %}

                    <th>Change Distance</th>
                    <th>Contribution to Overall Change</th>
                    <th>Change in Proportion</th>
                    <th>Percent Change</th>
                </tr>
                </thead>
                <tbody>

                {% for key,row in df.iterrows() %}

                <tr>
                    {% for dim_num in range(num_of_dims) %}
                        <td>{{ row['dimension_value_' ~ dim_num] }}</td>
                    {% endfor %}

                    <td>{{ row["change_distance"] }}</td>
                    <td>{{ row['contrib_to_overall_change'] }}%</td>
                    <td>{{ row['change_in_proportion'] }}%</td>
                    <td>{{ row['percent_change'] }}%</td>
                </tr>
                {% endfor %}
                </tbody>
            </table>
        {% endfor %}
    {% endif %}
</div></div></div>
</body>
</html>
